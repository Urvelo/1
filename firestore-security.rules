rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Käyttäjätiedot - käyttäjä voi lukea ja päivittää vain omia tietojaan
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Tilaukset - käyttäjä voi lukea vain omat tilauksensa
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         isAdmin(request.auth.uid));
      
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         isAdmin(request.auth.uid));
      
      allow delete: if isAdmin(request.auth.uid);
    }
    
    // Tuotteet - kaikki voivat lukea, vain adminit voivat muokata
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Kategoriat - kaikki voivat lukea, vain adminit voivat muokata
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // Admin-käyttäjät - vain luettavissa (ei kirjoitusta client-puolelta)
    match /admin_users/{adminId} {
      allow read: if request.auth != null;
      allow write: if false; // Estetään client-päivitykset
    }
    
    // Admin-tarkistus funktio
    function isAdmin(uid) {
      return exists(/databases/$(database)/documents/admin_users/admin) &&
             get(/databases/$(database)/documents/admin_users/admin).data.email == 
             get(/databases/$(database)/documents/users/$(uid)).data.email;
    }
  }
}